// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/coin/add/": {
            "post": {
                "description": "create a new coin",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coins"
                ],
                "summary": "create a new item",
                "operationId": "add-coin",
                "parameters": [
                    {
                        "description": "coin data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CoinItemRequestBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.MessageOk"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.MessageErr"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/model.MessageErr"
                        }
                    }
                }
            }
        },
        "/coin/change/{symbol}": {
            "put": {
                "description": "update coin by symbol ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coins"
                ],
                "summary": "update item",
                "operationId": "update-coin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "coin symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "coin data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CoinItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MessageOk"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.MessageErr"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.MessageErr"
                        }
                    }
                }
            }
        },
        "/coin/delete/{symbol}": {
            "delete": {
                "description": "delete coin by symbol ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coins"
                ],
                "summary": "delete item",
                "operationId": "delete-coin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "coin symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MessageOk"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.MessageErr"
                        }
                    }
                }
            }
        },
        "/coin/info/{symbol}": {
            "get": {
                "description": "get an item from coin list by symbol ID, like \"btc\"",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "coins"
                ],
                "summary": "get an item",
                "operationId": "get-coin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "coin symbol",
                        "name": "symbol",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MessageOk"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.MessageErr"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.CoinItem": {
            "type": "object",
            "properties": {
                "exchanges": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "model.CoinItemRequestBody": {
            "type": "object",
            "properties": {
                "exchanges": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "symbol": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                }
            }
        },
        "model.MessageErr": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "model.MessageOk": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.CoinItem"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean",
                    "default": true
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v2",
	Schemes:          []string{},
	Title:            "Swagger Example for job interviews",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
